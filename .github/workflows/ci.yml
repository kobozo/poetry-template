name: CI

on:
  push:
    branches:
      - main
      - acceptance
      - develop
  pull_request:
    branches:
      - main
      - acceptance
      - develop

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'  # Change this to the version you need

    - name: Install Poetry
      run: curl -sSL https://install.python-poetry.org | python3 -

    - name: Cache Poetry
      uses: actions/cache@v3
      with:
        path: ~/.cache/pypoetry
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-

    - name: Install dependencies
      run: poetry install

    # - name: gitleaks
    #   uses: gitleaks/gitleaks-action@v2
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE}} # Only required for Organizations, not personal accounts.

    - name: Run pre-commit hooks
      uses: pre-commit/action@v3.0.1
      env:
        SKIP: gitleaks
      with:
        extra_args: '--all-files'

  create_release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Get the current datetime
        id: datetime
        run: echo "::set-output name=datetime::$(date +'%Y%m%d%H%M')"

      - name: Create a version number
        id: version
        run: echo "::set-output name=version::v$(date +'%Y%m%d%H%M')"

      - name: Zip the repository
        run: |
          zip -r poetry-template.zip .

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: Release ${{ steps.version.outputs.version }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./poetry-template.zip
          asset_name: poetry-template.zip
          asset_content_type: application/zip